<?xml version="1.0" encoding="utf-8"?>
<EditAttributes xmlns="de.waveumleditor.view.diagrammer.dialogues.*" xmlns:mx="http://www.adobe.com/2006/mxml">
	
	<mx:Script>
        <![CDATA[
        	import de.waveumleditor.controller.Controller;
        	import mx.messaging.management.Attribute;
        	import de.waveumleditor.model.classDiagram.nodes.EVisibility;
        	import de.waveumleditor.model.Identifier;
        	import de.waveumleditor.model.classDiagram.nodes.MType;
        	import de.waveumleditor.model.classDiagram.nodes.MClassAttribute;
        	import de.waveumleditor.model.classDiagram.nodes.MVariable;
        	import mx.controls.Button;
        	import mx.managers.SystemManager;
        	import mx.core.Application;
        	import mx.managers.PopUpManagerChildList;
        	import adobe.utils.CustomActions;
            import mx.events.CloseEvent;
            import mx.managers.PopUpManager;
            import mx.collections.IList;
            import mx.containers.TitleWindow;
            
            import de.waveumleditor.model.classDiagram.nodes.MClassDiagramNode;
            import de.waveumleditor.model.classDiagram.nodes.MClassNode;
            import de.waveumleditor.view.diagrammer.classDiagram.Formatter;
            import de.waveumleditor.model.classDiagram.nodes.IClassElement;

  
          
            
            private function titleWindow_close(evt:CloseEvent):void {
                PopUpManager.removePopUp(editAttributesWindow);
            }
            override public function update(nodeData:MClassDiagramNode):void 
			{
				trace("update editAttributesWindow method called");
				if (!(nodeData is MClassNode)) throw new Error("nodeData must be an instance of UMLCLass");
				
				this.setClassData(nodeData as MClassNode);
				
				// update class-name
				Formatter.formatLabelOfClassElement(this.getClassData() as MClassNode, classNodeName);
				var nodeName:String;
				nodeName = nodeData.getName();
				if(nodeName==""){nodeName="Neue Klasse"};//default
				classNodeName.text = nodeName;
				
				// add attributes
				var attributes:IList = (this.getClassData() as MClassNode).getAttributes();
				addElementsToContentGrid(attributes, attributesList);
			}
			
			
			public function addElementsToContentGrid(elements:IList, classDataGrid:Grid):void 
			{
				classDataGrid.removeAllChildren();
				if(elements.length > 0)
				{
					for(var i:int = 0; i < elements.length; i++)
					{
						var classElement:Object = elements.getItemAt(i);
						attributesList.addChild(new EditClassNodeElement(classElement as MClassAttribute, this));
					}
				}
			}
			public function popUp():void
			{	
		        editAttributesWindow.title = "Attribute editieren";
		        editAttributesWindow.addChild(editAttributesGrid);
		        
		        mx.managers.PopUpManager.addPopUp(editAttributesWindow, SystemManager.getSWFRoot(editAttributesWindow), true);
		        mx.managers.PopUpManager.centerPopUp(editAttributesWindow);
			}
        ]]>
    </mx:Script>
<!--	<container> -->
	<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
			id="editAttributesWindow"
			layout="vertical" 
			minWidth="340" 
			minHeight="200"
			maxHeight="500"
	        title="Attribute editieren"
	        titleStyleName="titleText"
	        backgroundColor="#FFFFFF"
	        backgroundAlpha="0.7"
	        borderAlpha="1.0"
	        cornerRadius="10"
	        dropShadowEnabled="true"
	        showCloseButton="true"
	        close="titleWindow_close(event)" borderColor="#E2E2E2"> 
	    
	    <mx:Grid id="editAttributesGrid" width="100%" height="100%" verticalAlign="top">
	        <mx:GridRow width="100%" height="100%">
	            <mx:GridItem width="100%" height="100%">
	                <mx:Grid width="100%" height="100%">
	                    <mx:GridRow width="100%" height="15">
	                        <mx:GridItem width="100%" height="100%" >
	                            <mx:Label id="classNodeName">
	                        		<mx:text>
	                        		
	                        		</mx:text>
	                            </mx:Label>
	                        </mx:GridItem>
	                    </mx:GridRow>
	                    <mx:GridRow width="100%" height="5">
	                        <mx:GridItem width="100%" height="0%" >
	                       		<mx:HRule x="0" width="100%" shadowColor="#418D8E" strokeColor="#418D8E"/>
	                        </mx:GridItem>
	                    </mx:GridRow>
	                    <mx:GridRow width="100%">
	                        <mx:GridItem width="100%" height="100%">
	                            <mx:Grid width="100%" id="attributesList">
	                            </mx:Grid>
	                        </mx:GridItem>
	                    </mx:GridRow>
	                    <mx:GridRow width="100%">
	                   		<mx:GridItem horizontalAlign="right">
	                   			<mx:Button label="+" height="15" width="35" click="handleAdd(event)"/>
	                    	</mx:GridItem>
	                    	<mx:GridItem>
	                    	</mx:GridItem>
	                    </mx:GridRow>
	                </mx:Grid>
	            </mx:GridItem>
	        </mx:GridRow>
	    
	    	<mx:GridRow width="100%" height="0%">
	    		<mx:GridItem>
				    <mx:Grid width="100%" height="0%">
				        <mx:GridRow width="100%" height="100%">
				            <mx:GridItem width="100%" height="100%">
				            </mx:GridItem>
				            <mx:GridItem width="0%" height="100%">
				                <mx:Button label="SchlieÃŸen" click="titleWindow_close(CloseEvent.CLOSE as CloseEvent)"/>
				            </mx:GridItem>
				        </mx:GridRow>
				    </mx:Grid>
			   </mx:GridItem>
		    </mx:GridRow>
	    </mx:Grid>
		
	
	
	</mx:TitleWindow> 
<!--	</container>-->
</EditAttributes>